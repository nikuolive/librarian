version: "3.9"

volumes:
  postgres-data:

  pgadmin-data:

services:
  postgres:
    image: docker.io/postgres:13.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data/
    networks:
      - docker_network

  pgadmin:
    image: docker.io/dpage/pgadmin4:5.7
    ports:
      - "5092:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    # networks:
    #   - docker_network

  # dev:
  #   container_name: librarian_dev
  #   image: librarian-dev:latest
  #   profiles:
  #     - dev
  #   build:
  #     context: .
  #     target: development
  #     dockerfile: ./Dockerfile
  #   command: npm run start:dev
  #   ports:
  #     - 3000:8080
  #     - 9229:9229
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   restart: unless-stopped

  # production:
  #   container_name: librarian_prod
  #   image: librarian-prod:0.1.0
  #   profiles:
  #     - prod
  #   build:
  #     context: .
  #     target: production
  #     dockerfile: ./Dockerfile
  #   command: npm run start:prod
  #   ports:
  #     - 3000:8080
  #     - 9229:9229
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   restart: unless-stopped

networks:
  docker_network:
    driver: bridge
